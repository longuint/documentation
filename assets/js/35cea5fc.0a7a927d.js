"use strict";(self.webpackChunkflamework=self.webpackChunkflamework||[]).push([[8323],{9066:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var i=r(5893),o=r(1151);const t={title:"November 3rd Release",authors:"fireboltofdeath"},s=void 0,l={permalink:"/blog/2021/11/03/flamework-release",editUrl:"https://github.com/rbxts-flamework/documentation/blog/2021-11-03-flamework-release.md",source:"@site/blog/2021-11-03-flamework-release.md",title:"November 3rd Release",description:"Change Log",date:"2021-11-03T00:00:00.000Z",formattedDate:"November 3, 2021",tags:[],readingTime:1.345,hasTruncateMarker:!0,authors:[{name:"fireboltofdeath",title:"Maintainer",url:"https://github.com/Fireboltofdeath",imageURL:"https://avatars.githubusercontent.com/u/24422634?v=4",key:"fireboltofdeath"}],frontMatter:{title:"November 3rd Release",authors:"fireboltofdeath"},unlisted:!1,prevItem:{title:"May 15th Modding Release",permalink:"/blog/2022/05/15/flamework-release"},nextItem:{title:"September 14th Release",permalink:"/blog/2021/09/14/flamework-release"}},a={authorsImageUrls:[void 0]},d=[{value:"Change Log",id:"change-log",level:2},{value:"Transformer",id:"transformer",level:3},{value:"Potentially breaking",id:"potentially-breaking",level:5},{value:"Core",id:"core",level:3},{value:"Networking",id:"networking",level:3},{value:"Potentially breaking",id:"potentially-breaking-1",level:5},{value:"Components",id:"components",level:3},{value:"Changes",id:"changes",level:2},{value:"<code>addPaths</code> improvements",id:"addpaths-improvements",level:3},{value:"Previous Release",id:"previous-release",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h5:"h5",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"change-log",children:"Change Log"}),"\n",(0,i.jsxs)(n.p,{children:["This release is primarily bug fixes. Some bugs may require manual action on your part, see ",(0,i.jsx)(n.a,{href:"#potentially-breaking",children:"transformer"})," and ",(0,i.jsx)(n.a,{href:"#potentially-breaking-1",children:"networking"})]}),"\n",(0,i.jsx)(n.h3,{id:"transformer",children:"Transformer"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fixed conditional type guard generation."}),"\n",(0,i.jsx)(n.li,{children:"Fixed properties that do not have initializers in components."}),"\n",(0,i.jsx)(n.li,{children:"Fixed constructor-inferred types on components."}),"\n",(0,i.jsx)(n.li,{children:"Fixed abstract members on components."}),"\n",(0,i.jsx)(n.li,{children:"Fixed Enum guard generation."}),"\n",(0,i.jsxs)(n.li,{children:["Fixed Enum union (",(0,i.jsx)(n.code,{children:"Enum.A | Enum.B"}),") guard generation."]}),"\n",(0,i.jsxs)(n.li,{children:["Add warning when ",(0,i.jsx)(n.code,{children:"Dependency"})," macro is outside of a function."]}),"\n",(0,i.jsx)(n.li,{children:"Add support for EnumItem literal guard generation."}),"\n",(0,i.jsx)(n.li,{children:"Decreased output clutter when compiling in verbose mode."}),"\n",(0,i.jsx)(n.li,{children:"Improved TS version mismatch errors."}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"potentially-breaking",children:"Potentially breaking"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"#addpaths-improvements",children:["Improved ",(0,i.jsx)(n.code,{children:"addPaths"})," macro."]})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"core",children:"Core"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Removed preloaded messages"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"networking",children:"Networking"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Server-sided events and functions now have ",(0,i.jsx)(n.code,{children:"predict"})," methods."]}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"potentially-breaking-1",children:"Potentially breaking"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Middleware and networking function connections are now (optionally) asynchronous.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This may require changes for existing networking function middleware, as ",(0,i.jsx)(n.code,{children:"processNext"})," now returns a promise."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Fixed incorrect return type on ",(0,i.jsx)(n.code,{children:"Components.getComponent"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"changes",children:"Changes"}),"\n",(0,i.jsxs)(n.h3,{id:"addpaths-improvements",children:[(0,i.jsx)(n.code,{children:"addPaths"})," improvements"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"addPaths"})," once again supports preloading only specific files as well as relative paths.\nWhen using globs (e.g * or **), relative paths will be disabled and only entire folders can be preloaded."]}),"\n",(0,i.jsxs)(n.p,{children:["If your project is a multi-place project, you will have to update your paths to be relative to your project's root directory due to a bug with ",(0,i.jsx)(n.code,{children:"addPaths"})," which has now been fixed."]}),"\n",(0,i.jsx)(n.h2,{id:"previous-release",children:"Previous Release"}),"\n",(0,i.jsx)(n.p,{children:"If you run into any issues with the update, you should revert your packages to these specific versions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"@flamework/core: 1.0.0-beta.1\n@flamework/networking: 1.0.0-beta.5\n@flamework/components: 1.0.0-beta.4\nrbxts-transformer-flamework: 1.0.0-beta.7\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>s});var i=r(7294);const o={},t=i.createContext(o);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);