"use strict";(self.webpackChunkflamework=self.webpackChunkflamework||[]).push([[6426],{6281:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var o=r(5893),s=r(1151);const t={title:"Flamework v1.0.0",authors:"fireboltofdeath",tags:["Release"]},i=void 0,l={permalink:"/blog/2023/12/18/flamework-release",editUrl:"https://github.com/rbxts-flamework/documentation/tree/master/blog/2023-12-18-flamework-release.md",source:"@site/blog/2023-12-18-flamework-release.md",title:"Flamework v1.0.0",description:"Change Log",date:"2023-12-18T00:00:00.000Z",formattedDate:"December 18, 2023",tags:[{label:"Release",permalink:"/blog/tags/release"}],readingTime:6.14,hasTruncateMarker:!0,authors:[{name:"fireboltofdeath",title:"Maintainer",url:"https://github.com/Fireboltofdeath",imageURL:"https://avatars.githubusercontent.com/u/24422634?v=4",key:"fireboltofdeath"}],frontMatter:{title:"Flamework v1.0.0",authors:"fireboltofdeath",tags:["Release"]},unlisted:!1,prevItem:{title:"Flamework v1.1.0",permalink:"/blog/2024/01/21/flamework-release"},nextItem:{title:"Flamework v1.0.0-beta.23",permalink:"/blog/2023/08/13/flamework-release"}},a={authorsImageUrls:[void 0]},d=[{value:"Change Log",id:"change-log",level:2},{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Transformer",id:"transformer",level:3},{value:"Core",id:"core",level:3},{value:"Components",id:"components",level:3},{value:"Networking",id:"networking",level:3},{value:"Additions",id:"additions",level:2},{value:"Core",id:"core-1",level:3},{value:"Components",id:"components-1",level:3},{value:"Networking",id:"networking-1",level:3},{value:"Transformer",id:"transformer-1",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"change-log",children:"Change Log"}),"\n",(0,o.jsx)(n.p,{children:"Flamework is finally entering its long overdue v1.0.0, and along comes with a plethora of changes."}),"\n",(0,o.jsxs)(n.p,{children:["There have been many breaking changes made to ensure the longevity of Flamework and you should read all of these changes before migrating to ",(0,o.jsx)(n.code,{children:"v1.0.0"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["A migration guide detailing the larger changes has been included ",(0,o.jsx)(n.a,{href:"/docs/migration",children:"here"})," but it is still recommended that you read the full release notes."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/core/commits/master",children:"@flamework/core"}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/components/commits/master",children:"@flamework/components"}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/networking/commits/master",children:"@flamework/networking"}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/transformer/commits/master",children:"rbxts-transformer-flamework"})]}),"\n",(0,o.jsx)("span",{style:{color:"crimson"},children:"This release contains breaking changes."}),"\n",(0,o.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,o.jsxs)(n.p,{children:["Packages that depend on Flamework ",(0,o.jsx)(n.code,{children:"v1.0.0-beta"})," will not be compatible with Flamework ",(0,o.jsx)(n.code,{children:"v1.0.0"})," projects."]}),"\n",(0,o.jsx)(n.h3,{id:"transformer",children:"Transformer"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Flamework decorators are now evaluated in the opposite order (bottom -> top) to match TypeScript behavior."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"core",children:"Core"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#abstract-classes",children:"Flamework decorators now support abstract classes."})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#improved-glob-support",children:"Improved glob support"})}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"@External()"})," decorator has been renamed to ",(0,o.jsx)(n.code,{children:"@Optional()"})," to better communicate intent."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"Flamework.registerExternalClass"})," function has been renamed to ",(0,o.jsx)(n.code,{children:"Flamework.includeOptionalClass"}),".","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"It is no longer necessary to explicitly include optional singletons, if they are part of your game's dependency graph."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Reflect.metadata"}),", ",(0,o.jsx)(n.code,{children:"Reflect.objToId"})," and ",(0,o.jsx)(n.code,{children:"Reflect.decorators"})," are no longer exposed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Flamework.Testing"})," was removed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Flamework.isInitialized"}),", ",(0,o.jsx)(n.code,{children:"Flamework.flameworkConfig"})," have been removed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Flamework.ignite()"})," no longer accepts a config object."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Modding.Generic"})," and ",(0,o.jsx)(n.code,{children:"Modding.Caller"})," have been renamed to ",(0,o.jsx)(n.code,{children:"Modding.GenericMany"})," and ",(0,o.jsx)(n.code,{children:"Modding.CallerMany"})," respectively.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The new ",(0,o.jsx)(n.code,{children:"Modding.Generic"})," and ",(0,o.jsx)(n.code,{children:"Modding.Caller"})," types are able to fetch individual metadata rather than an object containing metadata."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Flamework.hash"})," now uses type arguments, such as ",(0,o.jsx)(n.code,{children:'Flamework.hash<"text", "context">()'})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Dependency(T)"})," syntax has been removed in favor of ",(0,o.jsx)(n.code,{children:"Dependency<T>()"})," for the sake of consistency."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#component-streaming-modes",children:"Components now allow you to adjust StreamingEnabled support."})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#component-maids",children:"Maids are no longer included on BaseComponent by default"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"StarterPack"}),", ",(0,o.jsx)(n.code,{children:"StarterGui"}),", and ",(0,o.jsx)(n.code,{children:"StarterPlayer"})," are now ignored by default."]}),"\n",(0,o.jsxs)(n.li,{children:["Component methods now have a ",(0,o.jsx)(n.code,{children:"object"})," constraint on their generics, as part of the abstract class support."]}),"\n",(0,o.jsxs)(n.li,{children:["Internal ",(0,o.jsx)(n.code,{children:"BaseComponent"})," fields are no longer exposed, including: ",(0,o.jsx)(n.code,{children:"setInstance"}),", ",(0,o.jsx)(n.code,{children:"setAttribute"})," and ",(0,o.jsx)(n.code,{children:"_attributeChangeHandlers"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"networking",children:"Networking"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#networking-config-refactor",children:"Networking configuration refactor"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#improved-networking-handlers",children:"Improved networking handlers"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"additions",children:"Additions"}),"\n",(0,o.jsx)(n.h3,{id:"core-1",children:"Core"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#abstract-classes",children:"Flamework decorators now support abstract classes."})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#improved-glob-support",children:"Improved glob support"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Flamework.addPaths"}),"/",(0,o.jsx)(n.code,{children:"Flamework.addPathsGlob"})," is now able to preload packages."]}),"\n",(0,o.jsxs)(n.li,{children:["Added ",(0,o.jsx)(n.code,{children:"Modding.getObjectFromId"})," to replace ",(0,o.jsx)(n.code,{children:"Reflect.objToId"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"components-1",children:"Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#component-streaming-modes",children:"Components now allow you to adjust StreamingEnabled support."})}),"\n",(0,o.jsx)(n.li,{children:"Fixed attribute changed ordering where handlers would fire before the attribute is updated on the component object."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"networking-1",children:"Networking"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#networking-config-refactor",children:"Networking configuration refactor"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#improved-networking-handlers",children:"Improved networking handlers"})}),"\n",(0,o.jsx)(n.li,{children:"Removed type-based symbol obfuscation, which avoids a common roblox-ts bug with incremental mode."}),"\n",(0,o.jsx)(n.li,{children:"Networking is now mocked in edit mode to support use cases like UI stories."}),"\n",(0,o.jsx)(n.li,{children:"Server config and generated type guards are no longer exposed to the client by default."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"transformer-1",children:"Transformer"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Improved stability, all builtin Flamework macros have been converted to use the user macro machinery."}),"\n",(0,o.jsxs)(n.li,{children:["Added guard generation support for the ",(0,o.jsx)(n.code,{children:"Font"})," datatype. I know, you're welcome."]}),"\n",(0,o.jsx)(n.li,{children:"User macros now support union parameters, to optionally generate metadata."}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Modding.Many"})," user macro types can now be nested."]}),"\n",(0,o.jsx)(n.li,{children:"Fixed some incorrect node factory functions, which caused Flamework to erase certain tokens are generated emit."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>i});var o=r(7294);const s={},t=o.createContext(s);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);