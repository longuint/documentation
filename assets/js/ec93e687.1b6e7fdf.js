"use strict";(self.webpackChunkflamework=self.webpackChunkflamework||[]).push([[7374],{4808:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});var t=o(5893),i=o(1151);const r={title:"Frequently Asked"},l=void 0,s={id:"frequently-asked",title:"Frequently Asked",description:"This is a compilation of frequently asked questions. If you have any question not listed here and you think it should be listed here, feel free to make a PR or ask in the roblox-ts discord.",source:"@site/docs/frequently-asked.mdx",sourceDirName:".",slug:"/frequently-asked",permalink:"/docs/frequently-asked",draft:!1,unlisted:!1,editUrl:"https://github.com/rbxts-flamework/documentation/docs/frequently-asked.mdx",tags:[],version:"current",frontMatter:{title:"Frequently Asked"},sidebar:"flamework",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Configuration",permalink:"/docs/guides/configuration"}},d={},a=[{value:"When do I use <code>OnInit</code> over <code>OnStart</code>?",id:"when-do-i-use-oninit-over-onstart",level:3},{value:"Should I commit <code>flamework.build</code> into Git?",id:"should-i-commit-flameworkbuild-into-git",level:3},{value:"Should I include <code>flamework.build</code> in my package?",id:"should-i-include-flameworkbuild-in-my-package",level:3},{value:"Flamework cannot be built in a dirty environment.",id:"flamework-cannot-be-built-in-a-dirty-environment",level:3}];function c(e){const n={a:"a",code:"code",h3:"h3",p:"p",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This is a compilation of frequently asked questions. If you have any question not listed here and you think it should be listed here, feel free to make a PR or ask in the roblox-ts discord."}),"\n",(0,t.jsxs)(n.h3,{id:"when-do-i-use-oninit-over-onstart",children:["When do I use ",(0,t.jsx)(n.a,{href:"./guides/lifecycle-events#oninit-singletons",children:(0,t.jsx)(n.code,{children:"OnInit"})})," over ",(0,t.jsx)(n.a,{href:"./guides/lifecycle-events#onstart-singletons-components",children:(0,t.jsx)(n.code,{children:"OnStart"})}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["You should prefer using ",(0,t.jsx)(n.code,{children:"OnStart"}),", unless you need the unique behavior of ",(0,t.jsx)(n.code,{children:"OnInit"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"should-i-commit-flameworkbuild-into-git",children:["Should I commit ",(0,t.jsx)(n.code,{children:"flamework.build"})," into Git?"]}),"\n",(0,t.jsx)(n.p,{children:"No, this file is meant for storing information that Flamework needs inbetween compiles and is generally discarded if it can be."}),"\n",(0,t.jsxs)(n.h3,{id:"should-i-include-flameworkbuild-in-my-package",children:["Should I include ",(0,t.jsx)(n.code,{children:"flamework.build"})," in my package?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes, you should include the file whenever you publish your package."}),"\n",(0,t.jsx)(n.h3,{id:"flamework-cannot-be-built-in-a-dirty-environment",children:"Flamework cannot be built in a dirty environment."}),"\n",(0,t.jsxs)(n.p,{children:["This error occurs whenever you attempt to compile Flamework with incremental mode enabled in a project that was not previously using Flamework. You should delete your ",(0,t.jsx)(n.code,{children:"out"})," directory which will cause TypeScript to completely recompile your project."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>l});var t=o(7294);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);