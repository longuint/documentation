"use strict";(self.webpackChunkflamework=self.webpackChunkflamework||[]).push([[346],{5293:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=r(5893),t=r(1151);const s={title:"Flamework v1.0.0-beta.20",authors:"fireboltofdeath",tags:["Release"]},l=void 0,i={permalink:"/blog/2023/04/13/flamework-release",editUrl:"https://github.com/rbxts-flamework/documentation/blog/2023-04-13-flamework-release.md",source:"@site/blog/2023-04-13-flamework-release.md",title:"Flamework v1.0.0-beta.20",description:"Change Log",date:"2023-04-13T00:00:00.000Z",formattedDate:"April 13, 2023",tags:[{label:"Release",permalink:"/blog/tags/release"}],readingTime:3.53,hasTruncateMarker:!0,authors:[{name:"fireboltofdeath",title:"Maintainer",url:"https://github.com/Fireboltofdeath",imageURL:"https://avatars.githubusercontent.com/u/24422634?v=4",key:"fireboltofdeath"}],frontMatter:{title:"Flamework v1.0.0-beta.20",authors:"fireboltofdeath",tags:["Release"]},unlisted:!1,prevItem:{title:"Flamework v1.0.0-beta.23",permalink:"/blog/2023/08/13/flamework-release"},nextItem:{title:"December 19th Release",permalink:"/blog/2022/12/19/flamework-release"}},a={authorsImageUrls:[void 0]},c=[{value:"Change Log",id:"change-log",level:2},{value:"Transformer",id:"transformer",level:3},{value:"Core",id:"core",level:3},{value:"Components",id:"components",level:3},{value:"Networking",id:"networking",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"change-log",children:"Change Log"}),"\n",(0,o.jsx)(n.p,{children:"Flamework will begin releasing packages with matching versions.\nYou should use the same version for every Flamework package."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/core/commits/master",children:"@flamework/core"}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/components/commits/master",children:"@flamework/components"}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/networking/commits/master",children:"@flamework/networking"}),"\n",(0,o.jsx)(n.a,{href:"https://github.com/rbxts-flamework/transformer/commits/master",children:"rbxts-transformer-flamework"})]}),"\n",(0,o.jsx)("span",{style:{color:"crimson"},children:"This release contains breaking changes."}),"\n",(0,o.jsx)(n.h3,{id:"transformer",children:"Transformer"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"TypeScript is now a peer dependency."}),"\n",(0,o.jsx)(n.li,{children:"Flamework will user the correct parameter length for user macros where it previously didn't (such as tuple rest parameters.)"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"delete"})," expressions will now work on component attributes."]}),"\n",(0,o.jsxs)(n.li,{children:["Improved union simplification for literal guard generation.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"literal"})," guards will combine to a single guard, e.g ",(0,o.jsx)(n.code,{children:"1 | 2"})," will no longer become ",(0,o.jsx)(n.code,{children:"t.union(t.literal(1), t.literal(2))"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"core",children:"Core"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Added a ",(0,o.jsx)(n.code,{children:"profiling"})," option to ",(0,o.jsx)(n.code,{children:"flamework.json"})," to enable memory categories and microprofiler labels."]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#advanced-user-macros",children:"Advanced user macros"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Added doc comments to all component methods, also removed unnecessary overloads."}),"\n",(0,o.jsxs)(n.li,{children:["Added ",(0,o.jsx)(n.code,{children:"waitForComponent"})," API to wait until a component is added to a specific instance."]}),"\n",(0,o.jsxs)(n.li,{children:["Components will now warn whenever a component could not be created for 5+ seconds.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can define ",(0,o.jsx)(n.code,{children:"warningTimeout"})," in your component settings to override the time, set to 0 to disable."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Added the ability to whitelist/blacklist specific ancestors.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["These can be specified using ",(0,o.jsx)(n.code,{children:"ancestorWhitelist"})," and ",(0,o.jsx)(n.code,{children:"ancestorBlacklist"})," in your component settings."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("span",{style:{color:"crimson"},children:"[BREAKING]"})," Defaults to ",(0,o.jsx)(n.code,{children:"ancestorBlacklist: [ServerStorage, ReplicatedStorage]"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("span",{style:{color:"crimson"},children:"[BREAKING]"})," This does not update when components are reparented."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"networking",children:"Networking"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Fixed an error whenever ",(0,o.jsx)(n.code,{children:"NaN"})," was sent as an ID."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>i,a:()=>l});var o=r(7294);const t={},s=o.createContext(t);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);