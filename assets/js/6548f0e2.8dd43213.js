"use strict";(self.webpackChunkflamework=self.webpackChunkflamework||[]).push([[1165],{2082:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});var r=o(5893),t=o(1151);const l={title:"May 15th Modding Release",authors:"fireboltofdeath"},i=void 0,s={permalink:"/blog/2022/05/15/flamework-release",editUrl:"https://github.com/rbxts-flamework/documentation/blog/2022-05-15-flamework-release.md",source:"@site/blog/2022-05-15-flamework-release.md",title:"May 15th Modding Release",description:"Change Log",date:"2022-05-15T00:00:00.000Z",formattedDate:"May 15, 2022",tags:[],readingTime:2.065,hasTruncateMarker:!0,authors:[{name:"fireboltofdeath",title:"Maintainer",url:"https://github.com/Fireboltofdeath",imageURL:"https://avatars.githubusercontent.com/u/24422634?v=4",key:"fireboltofdeath"}],frontMatter:{title:"May 15th Modding Release",authors:"fireboltofdeath"},unlisted:!1,prevItem:{title:"June 9th Components Release",permalink:"/blog/2022/06/09/flamework-release"},nextItem:{title:"November 3rd Release",permalink:"/blog/2021/11/03/flamework-release"}},d={authorsImageUrls:[void 0]},a=[{value:"Change Log",id:"change-log",level:2},{value:"Transformer",id:"transformer",level:3},{value:"Core",id:"core",level:3},{value:"Components",id:"components",level:3},{value:"Networking",id:"networking",level:3},{value:"Modding",id:"modding",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"change-log",children:"Change Log"}),"\n",(0,r.jsx)(n.h3,{id:"transformer",children:"Transformer"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Flamework will no longer remove decorators that aren't Flamework decorators."}),"\n",(0,r.jsx)(n.li,{children:"Added support for decorators on fields."}),"\n",(0,r.jsx)(n.li,{children:"Union guard generation ignores symbol types."}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#id-generation",children:"Added configuration option to change how IDs are generated."})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/modding/metadata",children:"Added compile-time metadata"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#user-macros",children:"Added user macros"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"core",children:"Core"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Flamework.implements<T>()"})," no longer narrows constructors into T."]}),"\n",(0,r.jsxs)(n.li,{children:["Flamework's lifecycle events now use the roblox-ts extensions ",(0,r.jsx)(n.code,{children:"@hideinherited"})," tag."]}),"\n",(0,r.jsx)(n.li,{children:"OnInit and OnStart will use separate memory categories per singleton."}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/modding",children:"Added support for modding."})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("span",{style:{color:"crimson"},children:"[BREAKING]"})," Components no longer call ",(0,r.jsx)("code",{children:"super.onStart()"})," implicitly."]}),"\n",(0,r.jsxs)(n.li,{children:["Components now use the modding API internally","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This means you can use custom lifecycle events on components."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"networking",children:"Networking"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Connect macro guard generation now takes into account optional parameters."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"modding",children:"Modding"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("span",{style:{color:"crimson"},children:"[BETA BREAKING]"})," ",(0,r.jsx)("code",{children:"Modding.createDependency"})," no longer adds the dependency as a listener and must be done separately."]}),"\n",(0,r.jsx)(n.li,{children:"You can create Flamework decorators."}),"\n",(0,r.jsx)(n.li,{children:"You can create custom lifecycle events."}),"\n",(0,r.jsx)(n.li,{children:"Deferred dependency API allows you to delay the constructor of a class."}),"\n",(0,r.jsx)(n.li,{children:"Decorators can request specific compile-time metadata."}),"\n",(0,r.jsx)(n.li,{children:"Dependency resolution can be modified, extended or overridden."}),"\n",(0,r.jsxs)(n.li,{children:["You can add custom values into Flamework's default dependency resolution.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Modding.addDependency(Flamework.id<SomeType>(), objOfSomeType)"})}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>i});var r=o(7294);const t={},l=r.createContext(t);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);